name: Build GraphHopper7+8 Turkey Data

on:
  schedule:
    - cron: "0 0 1 * *"   # her ayın 1'inde çalışır
  workflow_dispatch:       # manuel başlatma

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip default-jre default-jdk maven \
            osmium-tool gdal-bin sqlite3 zip

      - name: Download OSM Turkey extract
        run: |
          wget -O turkey.osm.pbf https://download.geofabrik.de/europe/turkey-latest.osm.pbf

      # --- GraphHopper 7 ---
      - name: Download GraphHopper Web JAR (7.0)
        run: |
          wget -O graphhopper-web-7.0.jar https://repo1.maven.org/maven2/com/graphhopper/graphhopper-web/7.0/graphhopper-web-7.0.jar

      - name: Prepare config.yml for GH7
        run: |
          cat > config-gh7.yml <<EOL
          graphhopper:
            datareader.file: turkey.osm.pbf
            graph.location: turkey-gh7
            datareader.dataaccess: MMAP
            import.osm.ignored_highways: footway,cycleway,path,pedestrian,steps,track,bridleway,service
            graph.encoded_values: [average_speed, maxspeed, road_class, priority, surface]

            profiles:
              - name: car
                vehicle: car
                weighting: fastest
                turn_costs: true
              - name: car_shortest
                vehicle: car
                weighting: shortest
                turn_costs: true

            profiles_ch:
              - profile: car
              - profile: car_shortest

            prepare.ch.threads: 1
            prepare.min_network_size: 200
          EOL

      - name: Run GraphHopper 7 import
        run: |
          java -Xmx6g -jar graphhopper-web-7.0.jar import config-gh7.yml
          cp config-gh7.yml turkey-gh7/
          zip -r turkey-gh7.ghz turkey-gh7

      # --- GraphHopper 8 ---
      - name: Download GraphHopper Web JAR (8.0)
        run: |
          wget -O graphhopper-web-8.0.jar https://repo1.maven.org/maven2/com/graphhopper/graphhopper-web/8.0/graphhopper-web-8.0.jar

      - name: Prepare config.yml for GH8
        run: |
          cat > config-gh8.yml <<EOL
          graphhopper:
            datareader.file: turkey.osm.pbf
            graph.location: turkey-gh8
            datareader.dataaccess: MMAP
            import.osm.ignored_highways: footway,cycleway,path,pedestrian,steps,track,bridleway,service
            graph.encoded_values: [average_speed, maxspeed, road_class, priority, surface]

            profiles:
              - name: car
                vehicle: car
                weighting: fastest
                turn_costs: true
              - name: car_shortest
                vehicle: car
                weighting: shortest
                turn_costs: true

            profiles_ch:
              - profile: car
              - profile: car_shortest

            prepare.ch.threads: 1
            prepare.min_network_size: 200
          EOL

      - name: Run GraphHopper 8 import
        run: |
          java -Xmx6g -jar graphhopper-web-8.0.jar import config-gh8.yml
          cp config-gh8.yml turkey-gh8/
          zip -r turkey-gh8.ghz turkey-gh8

      # --- POI extraction ---
      - name: Extract POIs + addresses with Osmium
        run: |
          osmium tags-filter turkey.osm.pbf \
            nwr/amenity nwr/shop nwr/tourism nwr/leisure nwr/highway nwr/addr:* \
            -o poi.osm.pbf

      - name: Convert POIs to SQLite
        run: |
          ogr2ogr -f SQLite pois.sqlite poi.osm.pbf -dsco SPATIALITE=YES

      # --- Release upload ---
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: monthly-build
          name: "Monthly Turkey Data (GH7 + GH8)"
          body: "GraphHopper-7 & GraphHopper-8 graphs (.ghz) + POI DB (SQLite) for Turkey"
          files: |
            turkey-gh7.ghz
            turkey-gh8.ghz
            pois.sqlite
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
